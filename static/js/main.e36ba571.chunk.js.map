{"version":3,"sources":["components/form/HeaderForm.js","components/form/GoodsForm.js","components/form/Form.js","components/document/header/Header.js","components/document/listOfGoods/Goods.js","components/document/listOfGoods/ListOfGoods.js","components/document/footer/Footer.js","components/document/Document.js","redux/documentHeader/actions.js","redux/documentHeader/types.js","redux/product/actions.js","redux/product/types.js","components/FillingForm.js","components/App.js","redux/documentHeader/documentHeaderReducer.js","redux/product/productReducer.js","redux/rootReducer.js","index.js"],"names":["HeaderForm","state","formErrors","date","number","toWhom","fromWhom","dateValid","numberValid","toWhomValid","fromWhomValid","formValid","handleChange","event","nam","target","name","val","value","setState","validateField","handleKeyPress","newDate","props","addDate","maxLengthCheck","object","length","maxLength","slice","fieldName","fieldValidationErrors","this","validateForm","className","type","onChange","onInput","placeholder","Component","GoodsForm","nameProduct","quantity","price","nameProductValid","quantityValid","priceValid","x","toString","includes","split","pop","handleSubmit","newProduct","id","Date","now","preventDefault","addProduct","currentTarget","allProducts","onSubmit","step","min","onClick","disabled","Form","Header","documentHeader","Goods","index","ListOfGoods","sum","arr","reduce","partial_sum","a","products","map","p","Number","key","Footer","Document","clearDoc","payload","FillingForm","connect","dispatch","bindActionCreators","App","initialState","combineReducers","action","persistedState","localStorage","getItem","JSON","parse","store","createStore","rootReducer","devToolsEnhancer","subscribe","setItem","stringify","getState","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e36ba571.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass HeaderForm extends Component {\r\n  state = {\r\n    formErrors: {\r\n      date: '', \r\n      number: '',\r\n      toWhom: '',\r\n      fromWhom: '',\r\n    },\r\n    dateValid: false, \r\n    numberValid: false,\r\n    toWhomValid: false,\r\n    fromWhomValid: false,\r\n    formValid: false,\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\r\n    this.setState({[nam]: val},\r\n                  () => { this.validateField(nam, val) })\r\n  }\r\n\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let dateValid = this.state.dateValid;\r\n    let numberValid = this.state.numberValid;\r\n    let toWhomValid = this.state.toWhomValid;\r\n    let fromWhomValid = this.state.fromWhomValid;\r\n\r\n    switch (fieldName) {\r\n      case 'date':\r\n        dateValid = value.length >= 8;\r\n        fieldValidationErrors.date = dateValid ? '' : 'Введите дату*';\r\n        break;\r\n\r\n      case 'number':\r\n        if (value.length) {\r\n          numberValid = value >= 1;\r\n          fieldValidationErrors.number = numberValid ? '' : 'Введите номер (больше ноля)*';\r\n        }\r\n        break;\r\n\r\n      case 'toWhom':\r\n        if (value.length) {\r\n          toWhomValid = value.length >= 2;\r\n          fieldValidationErrors.toWhom = toWhomValid ? '' : 'Не короче двух символов*';\r\n        }\r\n        break;\r\n\r\n      case 'fromWhom':\r\n        if (value.length) {\r\n          fromWhomValid = value.length >= 2;\r\n          fieldValidationErrors.fromWhom = fromWhomValid ? '' : 'Не короче двух символов*';\r\n        }\r\n        break;\r\n    }\r\n\r\n    this.handleKeyPress()\r\n\r\n    this.setState({formErrors: fieldValidationErrors,\r\n      dateValid: dateValid,\r\n      numberValid: numberValid,\r\n      toWhomValid: toWhomValid,\r\n      fromWhomValid: fromWhomValid,\r\n    }, this.validateForm);\r\n  }\r\n\r\n  validateForm() {\r\n    const {\r\n      dateValid,\r\n      numberValid,\r\n      toWhomValid,\r\n      fromWhomValid,\r\n    } = this.state;\r\n\r\n    this.setState({formValid: \r\n                    dateValid && \r\n                    numberValid &&\r\n                    toWhomValid &&\r\n                    fromWhomValid\r\n                  });\r\n  }\r\n\r\n  handleKeyPress = () => {\r\n    const { \r\n      date, \r\n      number, \r\n      toWhom, \r\n      fromWhom\r\n    } = this.state;\r\n\r\n    const newDate = {\r\n      date,\r\n      number,\r\n      toWhom,\r\n      fromWhom,\r\n    }\r\n      this.props.addDate(newDate);\r\n  }\r\n\r\n  maxLengthCheck = (object) => {\r\n    if (object.target.value.length > object.target.maxLength) {\r\n     object.target.value = object.target.value.slice(0, object.target.maxLength)\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      formErrors,\r\n      formValid,\r\n      dateValid,\r\n      numberValid,\r\n      toWhomValid,\r\n      fromWhomValid,\r\n    } = this.state;\r\n\r\n    return (\r\n      <form className='wrapper'>\r\n        <label className='cap'>\r\n          <input\r\n            name='date'\r\n            type='date'\r\n            onChange={this.handleChange}\r\n\t\t\t\t\t  className={dateValid ? 'entryField true' : 'entryField'}\r\n          />\r\n          <p className='error'>{formErrors.date}</p>\r\n\r\n          <input \r\n            name='number'\r\n            type='number'\r\n            maxLength = '5'\r\n            onInput={this.maxLengthCheck}\r\n            onChange={this.handleChange}\r\n\t\t\t\t\t  className={numberValid ? 'entryField true' : 'entryField'}\r\n            placeholder='номер накладной:'\r\n          />\r\n          <p className='error'>{formErrors.number}</p>\r\n\r\n          <input \r\n            name='toWhom'\r\n            type='text'\r\n            maxLength = '50'\r\n            onChange={this.handleChange}\r\n\t\t\t\t\t  className={toWhomValid ? 'entryField true' : 'entryField'}\r\n            placeholder='кому:'\r\n          />\r\n          <p className='error'>{formErrors.toWhom}</p>\r\n\r\n          <input \r\n            name='fromWhom'\r\n            type='text'\r\n            maxLength = '50'\r\n            onChange={this.handleChange}\r\n\t\t\t\t\t  className={fromWhomValid ? 'entryField true' : 'entryField'}\r\n            placeholder='от кого:'\r\n          />\r\n          <p className='error'>{formErrors.fromWhom}</p>\r\n        </label>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderForm;","import React, { Component } from 'react';\r\n\r\nclass GoodsForm extends Component {\r\n  state = {\r\n    formErrors: {\r\n      nameProduct: '', \r\n      quantity: '',\r\n      price: '',\r\n    },\r\n    nameProductValid: false, \r\n    quantityValid: false,\r\n    priceValid: false,\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({[nam]: val},\r\n                  () => { this.validateField(nam, val) })\r\n  }\r\n\r\n  validateField = (fieldName, value)  => {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let nameProductValid = this.state.nameProductValid;\r\n    let quantityValid = this.state.quantityValid;\r\n    let priceValid = this.state.priceValid;\r\n\r\n    switch (fieldName) {\r\n      case 'nameProduct':\r\n        if (value || !value) {\r\n          nameProductValid = value.length >= 1;\r\n          fieldValidationErrors.nameProduct = nameProductValid ? '' : 'Введите наименование товара*';\r\n        }\r\n        break;\r\n\r\n      case 'quantity':\r\n        if (value.length > 5) {\r\n          quantityValid = false;\r\n        } else if (value || !value) {\r\n          quantityValid = value > 0;\r\n          fieldValidationErrors.quantity = quantityValid ? '' : 'Введите количество*';\r\n        }\r\n        break;\r\n\r\n      case 'price':\r\n        const f = x => ( (x.toString().includes('.')) ? (x.toString().split('.').pop().length) : (0) );\r\n\r\n        if (f(value) > 2) {\r\n          priceValid = false;\r\n          fieldValidationErrors.price = 'Не больше двух знаков после запятой*';\r\n        } else if (value || !value) {\r\n          priceValid = value > 0;\r\n          fieldValidationErrors.price = priceValid ? '' : 'Введите цену*';\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({formErrors: fieldValidationErrors,\r\n      nameProductValid: nameProductValid,\r\n      quantityValid: quantityValid,\r\n      priceValid: priceValid,\r\n    }, this.validateForm);\r\n  }\r\n\r\n  validateForm() {\r\n    const {\r\n      nameProductValid,\r\n      quantityValid,\r\n      priceValid,\r\n    } = this.state;\r\n\r\n    this.setState({formValid: \r\n                    nameProductValid && \r\n                    quantityValid &&\r\n                    priceValid\r\n                  });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    const {\r\n      nameProduct,\r\n      quantity,\r\n      price,\r\n    } = this.state;\r\n\r\n    const newProduct = {\r\n      id: Date.now().toString(), \r\n      nameProduct,\r\n      quantity,\r\n      price,\r\n    };\r\n\r\n    event.preventDefault();\r\n    this.props.addProduct(newProduct);\r\n\t\tevent.currentTarget.value = '';\r\n  }\r\n\r\n  maxLengthCheck = (object) => {\r\n    if (object.target.value.length > object.target.maxLength) {\r\n     object.target.value = object.target.value.slice(0, object.target.maxLength)\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      formErrors,\r\n      formValid,\r\n      nameProductValid,\r\n      quantityValid,\r\n      priceValid,\r\n    } = this.state;\r\n\r\n    const { allProducts } = this.props;\r\n\r\n    return (\r\n        <form \r\n          onSubmit={this.handleSubmit}\r\n          className='wrapper'\r\n        >\r\n        <label className='cap capBorder'>\r\n          <input\r\n            name='nameProduct'\r\n            type='text'\r\n            maxLength='20'\r\n            onChange={this.handleChange}\r\n            className={nameProductValid ? 'entryField true' : 'entryField'}\r\n            placeholder='наименование товара:'\r\n          />\r\n          <p className='error'>{formErrors.nameProduct}</p>\r\n\r\n          <input\r\n            name='quantity'\r\n            type='number'\r\n            maxLength = '4'\r\n            onInput={this.maxLengthCheck}\r\n            onChange={this.handleChange}\r\n            className={quantityValid ? 'entryField true' : 'entryField'}\r\n            placeholder='количество:'\r\n          />\r\n          <p className='error'>{formErrors.quantity}</p>\r\n\r\n          <input \r\n            name='price'\r\n            type='number'\r\n            maxLength = '6'\r\n            onInput={this.maxLengthCheck}\r\n            onChange={this.handleChange}\r\n            step='0.01' \r\n            min='0' \r\n            className={priceValid ? 'entryField true' : 'entryField'}\r\n            placeholder='цена: 0,00р.'\r\n          />\r\n          <p className='error'>{formErrors.price}</p>\r\n        </label>\r\n\r\n        <button \r\n          onClick={this.handleSubmit}\r\n          disabled={!formValid || allProducts > 19}\r\n          className={!formValid || allProducts > 19 ? 'btnWriteDownDisable' : 'btnWriteDown'}\r\n        >\r\n          добавить товар\r\n        </button>\r\n        <p className={allProducts > 19 ? 'error errorBtn' : 'show'}>\r\n          Не больше двадцати наименований*\r\n        </p>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoodsForm;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HeaderForm from './HeaderForm.js';\r\nimport GoodsForm from './GoodsForm.js';\r\n\r\nimport './form.scss'\r\n\r\nclass Form extends Component {\r\n  render() {\r\n  const { \r\n    addDate, \r\n    addProduct, \r\n    allProducts \r\n  } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className='wrapper'\r\n      >\r\n          <HeaderForm \r\n            addDate={addDate}\r\n          />\r\n          <GoodsForm \r\n            addProduct={addProduct}\r\n            allProducts={allProducts}\r\n          />\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  addDate: PropTypes.func,\r\n  addProduct: PropTypes.func,\r\n  allProducts: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './header.scss';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const {\r\n      documentHeader,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='header'>\r\n        <div className='date'>\r\n          «<span className='dateDay'>\r\n            {documentHeader.date ? documentHeader.date.split('-')[2] : ''}\r\n          </span>»\r\n          <span className='dateMonth'>\r\n            {documentHeader.date ? documentHeader.date.split('-')[1] : ''}\r\n          </span>\r\n          <span className='dateYear'>\r\n            {documentHeader.date ? documentHeader.date.split('-')[0] : ''}\r\n          </span>г.\r\n        </div>\r\n\r\n        <h1 className='title'>\r\n          Накладная №\r\n            <span className='invoiceNumber'>\r\n              {documentHeader.number}\r\n            </span>\r\n        </h1>\r\n\r\n        <p className='toWhom'>\r\n          Кому\r\n            <span className='toWhomField'>\r\n              {documentHeader.toWhom}\r\n            </span>\r\n          </p>\r\n        <p className='fromWhom'>\r\n          От кого\r\n            <span className='fromWhomField'>\r\n              {documentHeader.fromWhom}\r\n            </span></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  documentHeader: PropTypes.shape({\r\n    date: PropTypes.string,\r\n    number: PropTypes.string,\r\n    toWhom: PropTypes.string,\r\n    fromWhom: PropTypes.string,\r\n  }),\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Goods extends Component {\r\n  render() {\r\n    const {  \r\n      nameProduct,\r\n      quantity,\r\n      price,\r\n      index,\r\n    } = this.props;\r\n\r\n    return(\r\n      <tr>\r\n        <td className='tableCell NumberInOrder'>\r\n          {index + 1}\r\n        </td>\r\n\r\n        <td className='tableCell nameProduct'>{nameProduct}</td>\r\n\r\n        <td className='tableCell quantity'>{quantity}</td>\r\n        \r\n        <td className='tableCell price'>{price}</td>\r\n\r\n        <td className='tableCell right'>{quantity * price}</td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nGoods.propTypes = {\r\n  nameProduct: PropTypes.string,\r\n  quantity: PropTypes.string,\r\n  price: PropTypes.string,\r\n}\r\n\r\nexport default Goods;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Goods from './Goods.js'\r\n\r\nimport './listOfGoods.scss'\r\n\r\nclass ListOfGoods extends Component {\r\n\r\n  sum = arr => { \r\n    return arr.reduce((partial_sum, a) => partial_sum + a, 0) \r\n  }\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const quantity = products.map(p => Number(p.quantity))\r\n    const price = products.map(p => Number(p.price))\r\n\r\n    return(\r\n      <div className='tableWraper'>\r\n        <table className='table'>\r\n          <colgroup>\r\n            <col className='col1' />\r\n            <col className='col2' />\r\n          </colgroup>\r\n\r\n          <tbody>\r\n            <tr>\r\n              <td className='tableCell'>\r\n                №<br />\r\n                п/п\r\n              </td>\r\n\r\n              <td className='tableCell'>\r\n                Наименование товара\r\n              </td>\r\n\r\n              <td className='tableCell'>\r\n                Кол-во\r\n              </td>\r\n\r\n              <td className='tableCell'>\r\n                Цена<br />\r\n                руб.,коп.\r\n              </td>\r\n\r\n              <td className='tableCell right'>\r\n                Сумма<br />\r\n                руб.,коп.\r\n              </td>\r\n            </tr>\r\n\r\n            {products.map(({id, nameProduct, quantity, price}, index) => (\r\n              <Goods \r\n                key={id}\r\n                index={index}\r\n                nameProduct={nameProduct}\r\n                quantity={quantity}\r\n                price={price}\r\n              />\r\n              ))\r\n            }\r\n            <tr>\r\n              <td className='tableCell right tableCellTotal'></td>\r\n\r\n              <td className='tableCell tableCellTotal'>\r\n                Итого . . .\r\n              </td>\r\n\r\n              <td className='tableCell'>\r\n                {this.sum(quantity)}\r\n              </td>\r\n\r\n              <td className='tableCell'>\r\n                {this.sum(price)}\r\n              </td>\r\n\r\n              <td className='tableCell right'>\r\n                {this.sum(price) * this.sum(quantity)}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nListOfGoods.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    nameProduct: PropTypes.string,\r\n    quantity: PropTypes.string,\r\n    price: PropTypes.string,\r\n  })),\r\n}\r\n\r\nexport default ListOfGoods;","import React, { Component } from 'react';\r\n\r\nimport './footer.scss';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return(\r\n      <div className='footer'>\r\n        М.П.\r\n        <div className='signature'>\r\n          Сдал <span className='line'>(расшифровка подписи)</span>\r\n        </div>\r\n\r\n        <div className='signature'>\r\n          Принял <span className='line'>(расшифровка подписи)</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from './header/Header.js';\r\nimport ListOfGoods from './listOfGoods/ListOfGoods.js'\r\nimport Footer from './footer/Footer.js'\r\n\r\nimport './document.scss'\r\n\r\nclass Document extends Component {\r\n  render() {\r\n    const {\r\n      documentHeader,\r\n      products,\r\n      clearDoc,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='wrapperDocument'>\r\n        <div className='document'>\r\n          <Header \r\n            documentHeader={documentHeader}\r\n          />\r\n          <ListOfGoods\r\n            products={products}\r\n          />\r\n          <Footer />\r\n        </div>\r\n        \r\n        <button \r\n          onClick={clearDoc}\r\n          className='btnClear'\r\n        >\r\n          очистить\r\n        </button>\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nDocument.propTypes = {\r\n  documentHeader: PropTypes.shape({\r\n    date: PropTypes.string,\r\n    number: PropTypes.string,\r\n    toWhom: PropTypes.string,\r\n    fromWhom: PropTypes.string,\r\n  }),\r\n  products: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    nameProduct: PropTypes.string,\r\n    quantity: PropTypes.string,\r\n    price: PropTypes.string,\r\n  })),\r\n}\r\n\r\nexport default Document;","import { ADD_DOCUMENT_HEADER } from \"./types\";\r\n\r\nexport const addDate = date => ({\r\n  type: ADD_DOCUMENT_HEADER,\r\n  payload: date,\r\n})\r\n","export const ADD_DOCUMENT_HEADER = 'ADD_DOCUMENT_HEADER';","import { ADD_PRODUCT, CLEAR } from \"./types\";\r\n\r\nexport const addProduct = products => ({\r\n  type: ADD_PRODUCT,\r\n  payload: products,\r\n})\r\n\r\nexport const clearDoc = () => ({\r\n  type: CLEAR\r\n})","export const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const CLEAR = 'CLEAR';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Form from './form/Form.js';\r\nimport Document from './document/Document.js';\r\n\r\nimport { addDate } from '../redux/documentHeader/actions.js';\r\nimport { addProduct, clearDoc } from '../redux/product/actions.js';\r\n\r\nimport './fillingForm.scss';\r\n\r\nclass FillingForm extends Component {\r\n  render() {\r\n    const { \r\n      addDate, \r\n      addProduct, \r\n      documentHeader, \r\n      products, \r\n      allProducts,\r\n      clearDoc, \r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='fillingForm'> \r\n        <Form \r\n          addDate={addDate}\r\n          addProduct={addProduct}\r\n          allProducts={allProducts}\r\n        />\r\n        <Document \r\n          documentHeader={documentHeader}\r\n          products={products}\r\n          clearDoc={clearDoc}\r\n        />\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  documentHeader: state.documentHeader,\r\n  products: state.products,\r\n  allProducts: state.products.length,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    addDate,\r\n    addProduct,\r\n    clearDoc,\r\n  }, dispatch);\r\n  \r\n  FillingForm.propTypes = {\r\n    addDate: PropTypes.func,\r\n    addProduct: PropTypes.func,\r\n\t  allProducts: PropTypes.number.isRequired,\r\n    documentHeader: PropTypes.shape({\r\n      date: PropTypes.string,\r\n      number: PropTypes.string,\r\n      toWhom: PropTypes.string,\r\n      fromWhom: PropTypes.string,\r\n    }),\r\n    products: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      nameProduct: PropTypes.string,\r\n      quantity: PropTypes.string,\r\n      price: PropTypes.string,\r\n    })),\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(FillingForm);\r\n","import React, { Component } from 'react';\n\nimport FillingForm from './FillingForm.js';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<FillingForm />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { ADD_DOCUMENT_HEADER, } from \"./types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_DOCUMENT_HEADER:\r\n      return action.payload;\r\n\r\n    default: return state;\r\n  }\r\n} ","import { ADD_PRODUCT, CLEAR } from \"./types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT:\r\n      return [...state, action.payload];\r\n\r\n    case CLEAR:\r\n      return state = []\r\n    \r\n    default: return state;\r\n  }\r\n} ","import { combineReducers } from \"redux\";\r\n\r\nimport documentHeaderReducer from \"./documentHeader/documentHeaderReducer.js\";\r\nimport productReducer from \"./product/productReducer.js\";\r\n\r\nexport default combineReducers({\r\n\tdocumentHeader: documentHeaderReducer,\r\n\tproducts: productReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport App from './components/App.js';\nimport rootReducer from './redux/rootReducer.js';\n\nconst persistedState = localStorage.getItem('reduxState') \n                       ? JSON.parse(localStorage.getItem('reduxState'))\n                       : {}\n\nconst store = createStore(rootReducer, persistedState, devToolsEnhancer());\n\nstore.subscribe(()=>{\n\tlocalStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nconst app = (\n\t<Provider store={ store }>\n\t\t<App />\n\t</Provider>\n)\n\nReactDOM.render(app , document.getElementById('root'));\n"],"sourceRoot":""}